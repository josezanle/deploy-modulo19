{"version":3,"sources":["firebase/firebase-config.jsx","hooks/useForm.jsx","types/types.jsx","actions/ui.jsx","actions/auth.jsx","components/auth/RegisterScreen.jsx","components/auth/LoginScreen.jsx","routers/AuthRouter.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","components/journal/Sidebar.jsx","components/notes/NotesAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/JournalScreen.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.jsx","reducers/uiReducer.jsx","store/store.jsx","reducers/authReducer.jsx","JournalApp.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","RegisterScreen","useDispatch","msgError","useSelector","state","ui","password2","formValues","isFormValid","trim","length","validator","isEmail","className","onSubmit","preventDefault","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","placeholder","autoComplete","onChange","to","LoginScreen","loading","disabled","onClick","signInWithPopup","src","alt","AuthRouter","exact","path","component","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","NotesAppBar","NoteScreen","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cf95715.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmMI9hqdy4TSQOdHyH8FJrd9MOq9b1m9g\",\r\n    authDomain: \"sql-demos-3f601.firebaseapp.com\",\r\n    databaseURL: \"https://sql-demos-3f601.firebaseio.com\",\r\n    projectId: \"sql-demos-3f601\",\r\n    storageBucket: \"sql-demos-3f601.appspot.com\",\r\n    messagingSenderId: \"501784188673\",\r\n    appId: \"1:501784188673:web:9bb851e4bdb343ef8c6d00\",\r\n    measurementId: \"G-Q6ENLGVF1J\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// referencia a firestore\r\nconst db = firebase.firestore();\r\n\r\n// con esta referencia podemos hacer la autenticacion con google\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","export const types = {\r\n    login: '[Auth] login',\r\n    logout:'[Auth] logout',\r\n\r\n    uiSetError:'[UI] Set Error',\r\n    uiRemoveError:'[UI] Remove Error',\r\n\r\n    uiStartLoading:'[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading'\r\n\r\n\r\n}","import { types } from '../types/types';\r\n\r\nexport const setError = (err) =>({\r\n    type: types.uiSetError,\r\n    payload:err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () =>({\r\n    type:types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () =>({\r\n    type:types.uiFinishLoading\r\n})","import {types} from '../types/types';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nimport { firebase,googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email,password) =>{\r\n    return (dispatch)=> {\r\n\r\n        dispatch(startLoading());\r\n\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n\r\n\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error',e.message, 'error');\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email,password,name) => {\r\n    return (dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then(async({ user }) => {\r\n\r\n            await user.updateProfile({displayName:name});\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n        .catch (e => {\r\n            Swal.fire('Error', e.message, 'error');\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) =>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user}) =>{\r\n            dispatch(\r\n                login(user.uid,user.displayName)\r\n                )\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const login = (uid,displayName) => ({\r\n\r\n        type: types.login,\r\n        payload:{\r\n                uid,\r\n                displayName\r\n                }\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return async (dispatch) =>{\r\n        await firebase.auth().signOut();\r\n\r\n\r\n        dispatch(logout());\r\n\r\n    }\r\n \r\n}\r\n\r\nexport const logout = ()=> ({\r\n    type:types.logout\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n\r\nconst [formValues,handleInputChange] = useForm({\r\n\r\n    name:'jozelo',\r\n    email:'example@gmail.com',\r\n    password:'123456',\r\n    password2: '123456'\r\n\r\n})\r\nconst {name,email,password,password2} = formValues;\r\n\r\nconst handleRegister = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(isFormValid()){\r\n        dispatch(startRegisterWithEmailPasswordName(email,password,name))\r\n    }\r\n}\r\n\r\nconst isFormValid = () =>{\r\n\r\n    if(name.trim().length === 0 ){\r\n        dispatch(setError ('Name Is Requiereded'))\r\n        return false;\r\n\r\n    }else if (!validator.isEmail(email) ){\r\n        dispatch(setError('Email is Not Valid'))\r\n        return false;\r\n\r\n    }else if (password !== password2 || password.length < 5) {\r\n        dispatch(setError('Password should be at least of 6 characters'))\r\n        return false\r\n    }\r\n\r\n\r\n    dispatch (removeError())\r\n    return true;\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister}>\r\n\r\n              {\r\n                  msgError &&\r\n                    (    \r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n              }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"  \r\n                    autoComplete=\"off\" \r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                \r\n                    />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                  \r\n                /> \r\n\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                /> \r\n\r\n                <button\r\n                        type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >Register\r\n                    \r\n                </button> \r\n\r\n               \r\n\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                Already Registered?\r\n                </Link>    \r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\nconst LoginScreen = () => {\r\n\r\nconst dispatch = useDispatch();\r\nconst {loading} = useSelector(state => state.ui)\r\n\r\nconst [formValues,handleInputChange] = useForm ({\r\n    email:'nando@gmail.com',\r\n    password:'123456'\r\n});\r\n\r\nconst {email,password} = formValues;\r\n\r\n\r\nconst handleLogin = (e) =>{\r\n    e.preventDefault ();\r\n    dispatch(startLoginEmailPassword(email,password))\r\n}\r\n\r\nconst handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin())\r\n\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"  \r\n                    autoComplete=\"off\" \r\n                    value={email}                \r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}                 \r\n                /> \r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >Login\r\n                    \r\n                </button> \r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with Social Networks</p>\r\n                    <div\r\n                        \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                Create New Account    \r\n                </Link>    \r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport RegisterScreen from '../components/auth/RegisterScreen';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthRouter;\r\n","import React from 'react'\r\n\r\nexport default function JournalEntry() {\r\n    return (\r\n        <div className=\"journal__entry\">\r\n            <div \r\n            className=\"journal__entry-picture\"\r\n            style={{\r\n                backgroundSize:'cover',\r\n                backgroundImage:'url(https://aws.traveler.es/prod/designs/v1/assets/1000x667/21250.jpg)'\r\n            }}\r\n            ></div>\r\n            <div className=\"journal__entry-body\">\r\n                <h3 className=\"journal__entry-title\">Un nuevo Comienzo</h3>\r\n\r\n                <p className=\"journal__entry-content\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat adipisci sunt nesciunt?</p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>Monday</span>\r\n                <h4>28</h4>\r\n            </div>\r\n\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport JournalEntry from './JournalEntry';\r\n\r\nexport default function JournalEntries() {\r\n\r\n    const entries = [1,2,3,4,5];\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n\r\n            {\r\n                entries.map( value => (\r\n                    <JournalEntry \r\n                                key={value} />                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport JournalEntries from './JournalEntries';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Sidebar = () => {\r\n\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst handleLogout = () =>{\r\n\r\n    dispatch (startLogout())\r\n}\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>Jozelo Rios</span>\r\n                </h3>\r\n\r\n                <button\r\n                        className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >Logout</button>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nconst NotesAppBar = () => {\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <div>\r\n                <button className=\"btn\">Picture\r\n                </button>\r\n                \r\n                <button className=\"btn\">Save\r\n                </button>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotesAppBar;\r\n","import React from 'react';\r\nimport NotesAppBar from './NotesAppBar';\r\n\r\nconst NoteScreen = () => {\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n\r\n            <NotesAppBar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteScreen;\r\n","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport NoteScreen from '../notes/NoteScreen';\r\n\r\nconst JournalScreen = () => {\r\n    return (\r\n          <div className=\"journal__main-content\">\r\n\r\n              <Sidebar/>\r\n\r\n              <main>\r\n\r\n                  <NoteScreen />\r\n              </main>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default JournalScreen;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n\r\n} from \"react-router-dom\";\r\n\r\nimport {firebase} from '../firebase/firebase-config'\r\n\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport JournalScreen from \"../components/journal/JournalScreen\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nconst AppRouter = () => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst [checking, setChecking] = useState(true);\r\nconst [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\r\n    firebase.auth().onAuthStateChanged((user)=>{\r\n\r\n        if (user?.uid){\r\n            dispatch(login(user.uid, user.displayName));\r\n            setIsLoggedIn(true);\r\n        }else{\r\n            setIsLoggedIn(false);\r\n        }\r\n        setChecking(false);\r\n    });\r\n\r\n}, [dispatch, setChecking, setIsLoggedIn])\r\n\r\nif( checking) {\r\n    return(\r\n        <h3>Espere...</h3>\r\n    )\r\n}\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n            \r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\n const initialState = {\r\n     loading:false,\r\n     msgError:null\r\n }\r\n\r\n\r\nexport const uiReducer = (state= initialState , action)=> {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                    ...state,\r\n                    msgError:action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            } \r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }    \r\n            \r\n\r\n\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore , combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport {authReducer} from '../reducers/authReducer'\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers ({\r\n\r\nauth: authReducer,\r\nui: uiReducer\r\n\r\n})\r\n\r\n\r\nexport const store = createStore (reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={},action) =>{\r\n\r\nswitch (action.type) {\r\n    \r\n    case types.login:\r\n        \r\n        return{\r\n          uid:action.payload.uid,\r\n          name:action.payload.displayName\r\n      }\r\n\r\n    case types.logout:\r\n        return { }\r\n\r\n    default:\r\n        return state;\r\n}\r\n\r\n}","import React from 'react';\r\n\r\nimport AppRouter from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\n\r\nconst JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider> \r\n       \r\n    );\r\n}\r\n\r\nexport default JournalApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}